extend type Query {
	versions: [Version] @all

	version(id: ID! @eq): Version @find

	currentVersion: Version @field(resolver:"CurrentVersion")
}

extend type Mutation {
	createVersion(input: CreateVersionInput!): Version @create @inject(context:"user.id",name:"user_id")

	updateVersion(input: UpdateVersionInput!): Version @update @inject(context:"user.id",name:"user_id")

	deleteVersion(id: ID!): Version @delete @inject(context:"user.id",name:"user_id")
}

type Version {
	id: ID!
	version: String
	change_type: String
	change_log: String
	notes: String
	user: User @belongsTo
}

input CreateVersionInput {
	version: String
	change_type: String
	change_log: String
	notes: String
}

input UpdateVersionInput {
	id: ID!
	version: String
	change_type: String
	change_log: String
	notes: String
}

