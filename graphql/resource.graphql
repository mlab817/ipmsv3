type Resource {
    id: ID!
    title: String
    description: String
    url: String
    image_url: String
    document_type: String
    added_by: ID!
    updated_by: ID!
    deleted_by: ID!
    adder: User @belongsTo
    updater: User @belongsTo
    deleter: User @belongsTo
    created_at: String
    updated_at: String
    deleted_at: String
}

input ResourceInput {
    title: String
    description: String
    url: String
    image_url: String
    document_type: String
}

input UpdateResourceInput {
    id: ID!
    title: String
    description: String
    image_url: String
    url: String
    document_type: String
}

extend type Query {
    resources: [Resource] @all
}

extend type Mutation {

    createResource(input: ResourceInput! @spread): Resource @create @inject(context: "user.id", name: "added_by")

    updateResource(input: UpdateResourceInput @spread): Resource @update @inject(context: "user.id", name: "updated_by")

    deleteResource(id: ID!): Resource @delete @inject(context: "user.id", name: "deleted_by")
}
